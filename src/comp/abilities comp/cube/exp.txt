// import React, { useEffect } from "react";
// import "./cube.css";
// const Cube = () => {
//   useEffect(() => {
//     const handleScroll = () => {
//       const scroll =
//         window.pageYOffset / (document.body.offsetHeight - window.innerHeight);
//       document.body.style.setProperty("--scroll", scroll);
//     };

//     window.addEventListener("scroll", handleScroll, false);

//     return () => {
//       window.removeEventListener("scroll", handleScroll, false);
//     };
//   }, []);
//   return (
//     <div className="cube-container">
//       <div className="progress"></div>
//       <div className="cube-wrap">
//         <div className="cube">
//           <div className="side top"></div>
//           <div className="side bottom"></div>
//           <div className="side front"></div>
//           <div className="side back"></div>
//           <div className="side left"></div>
//           <div className="side right"></div>
//         </div>
//         <div className="text">
//           <p>POSSIBILITIES</p>
//           <p>POSSIBILITIES2</p>
//           <p>POSSIBILITIES3</p>
//           <p>POSSIBILITIES4</p>
//         </div>
//       </div>
//     </div>
//   );
// };

// export default Cube;




/* .cube-container {
  padding: 0;
  margin: 0;
  min-height: 500vh;
  background-color: #262523;
  animation: body 1s linear;
}
.progress {
  height: 3px;
  width: 0%;
  background-color: #fff;
  position: fixed;
  top: 0;
  left: 0;
  animation: progress 1s linear;
}

@keyframes progress {
  to {
    background-color: rgb(20, 255, 226);
    width: 100%;
  }
}

.cube-wrap {
  --size: 30vmin;
  position: fixed;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  perspective: 100vmin;
}

.cube {
  transform-style: preserve-3d;
  transform: rotateX(0deg) rotateZ(45deg) rotateY(-45deg);
  animation: cube 1s linear;
}

@keyframes cube {
  to {
    transform: rotateX(360deg) rotateZ(45deg) rotateY(-45deg);
  }
}

.side {
  position: absolute;
  width: var(--size);
  height: var(--size);
  background-color: #eee;
  backface-visibility: visible;
  top: calc(var(--size) * -0.5);
  left: calc(var(--size) * -0.5);
}

.top {
  background-color: #fff;
  transform: rotateX(90deg) translateZ(calc(var(--size) * 0.5));
}

.bottom {
  background-color: #999;
  transform: rotateX(90deg) translateZ(calc(var(--size) * -0.5));
}

.left {
  background-color: #ccc;
  transform: rotateY(90deg) translateZ(calc(var(--size) * 0.5));
}

.right {
  background-color: #ddd;
  transform: rotateY(90deg) translateZ(calc(var(--size) * -0.5));
}

.front {
  background-color: #aaa;
  transform: translateZ(calc(var(--size) * 0.5));
}

.back {
  background-color: #bbb;
  transform: translateZ(calc(var(--size) * -0.5));
}

.progress,
.cube,
.side {
  animation-play-state: paused;
  animation-delay: calc(var(--scroll) * -1s);
  animation-iteration-count: 1;
  animation-fill-mode: both;
}
.text {
  z-index: 999;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.text p {
  font-size: 50px;
  color: #f88379;
} */